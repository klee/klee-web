---

- name: Make sure acl is installed
  apt: name=acl update_cache=yes state=latest

- name: "Add postgresql repo"
  template: src=pgdg.list dest=/etc/apt/sources.list.d/pgdg.list
  when: not ci
  tags: packages

- name: "Add postgresql key"
  shell: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
  when: not ci
  tags: packages

- name: Install PostgreSQL
  apt: name={{ item }} update_cache=yes state=installed
  with_items:
    - postgresql-9.5
    - postgresql-contrib-9.5
    - libpq-dev
    - python-psycopg2 # TODO: Move everything to python3
    - python3-psycopg2
  tags: packages

- name: Copy valid pg_hba.conf
  template: src=pg_hba.conf.j2 dest=/etc/postgresql/9.5/main/pg_hba.conf

- name: Copy valid postgresql.conf
  template: src=postgresql.conf.j2 dest=/etc/postgresql/9.5/main/postgresql.conf

- name: Ensure the PostgreSQL service is running
  service: name=postgresql state=restarted enabled=yes
  
# TODO: Can we find something better than this?
- name: Hold until Postgresql is up and running
  wait_for:
    host: 0.0.0.0
    port: 5432

- name: Ensure database is created
  become: yes
  become_user: postgres
  postgresql_db: name={{ db_name }}
                 encoding='UTF-8'
                 lc_collate='en_US.UTF-8'
                 lc_ctype='en_US.UTF-8'
                 template='template0'
                 state=present

- name: Ensure user has access to the database
  become: yes
  become_user: postgres
  postgresql_user: db={{ db_name }}
                   name={{ db_user }}
                   password={{ db_password }}
                   priv=ALL
                   state=present

- name: Ensure user does not have unnecessary privileges
  become: yes
  become_user: postgres
  postgresql_user: name={{ db_user }}
                   role_attr_flags=NOSUPERUSER,NOCREATEDB
                   state=present
